#Here is the fully updated docker-compose.yml based on your current setup, including:
#	•	✅ Fixes for Airflow initialization (airflow-init)
#	•	✅ PostgreSQL service
#	•	✅ Volume mounts
#	•	✅ Removed deprecated version field
#	•	✅ Fernet key (optional, read from .env)
#	•	✅ Scheduler + Webserver



# Define all services needed for the Airflow environment
services:
  # PostgreSQL database for Airflow metadata
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow          # Default Airflow DB user
      POSTGRES_PASSWORD: airflow      # Default password
      POSTGRES_DB: airflow            # Database name
    volumes:
      - postgres_db:/var/lib/postgresql/data  # Persist DB data in a named volume

  # Airflow Webserver (User Interface)
  airflow-webserver:
    image: apache/airflow:2.9.0-python3.9
    depends_on:
      - airflow-scheduler
      - postgres
    env_file:
      - ../.env                       # Load environment variables from .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    ports:
      - "8080:8080"                   # Web UI exposed at localhost:8080
    volumes:
      - ../dags:/opt/airflow/dags     # DAGs directory
      - ../logs:/opt/airflow/logs     # Log files directory
      - ../plugins:/opt/airflow/plugins  # Plugins folder for custom operators
    command: webserver                # Launch Airflow webserver process

  # Airflow Scheduler (manages DAG execution)
  airflow-scheduler:
    image: apache/airflow:2.9.0-python3.9
    depends_on:
      - postgres
    env_file:
      - ../.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ../dags:/opt/airflow/dags
      - ../logs:/opt/airflow/logs
      - ../plugins:/opt/airflow/plugins
    command: scheduler                # Launch Airflow scheduler process

  # Initialization step to setup the database and admin user
  airflow-init:
    image: apache/airflow:2.9.0-python3.9
    depends_on:
      - postgres
    env_file:
      - ../.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ../dags:/opt/airflow/dags
      - ../logs:/opt/airflow/logs
      - ../plugins:/opt/airflow/plugins
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "

# Define named volumes for persistent storage
volumes:
  postgres_db:
